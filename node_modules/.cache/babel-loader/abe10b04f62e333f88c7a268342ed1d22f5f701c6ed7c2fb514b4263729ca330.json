{"ast":null,"code":"import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { buffer } from 'd3';\nconst BarChart = ({\n  data\n}) => {\n  // const svgRef = useRef();\n  // console.log(data);\n  // const width = 600;\n  // const height = 500;\n  // useEffect(() => {\n  //   // D3.js code to draw the bar chart\n  //   const svg = d3\n  //     .select(svgRef.current)\n  //     .attr('width', width)\n  //     .attr('height', height);\n  //   const Buffer = 25;\n  //   //color\n  //   const color = d3\n  //     .scaleThreshold()\n  //     .domain([Math.round(d3.mean(data))])\n  //     .range(['#AED6F1', '#2874A6']);\n  //   const y_axis_scale = d3\n  //     .scaleLinear()\n  //     .domain([0, Math.max(...data)])\n  //     .range([buffer, height - buffer]);\n  //   const y_axis = d3\n  //     .axisLeft(y_axis_scale)\n  //     .tickSizeOuter(0)\n  //     .tickSizeInner(3)\n  //     .ticks(12);\n  //   const y_axis_g = svg.append('g').attr('id', 'yAxisG');\n  //   //RENDER Y AXIS\n  //   y_axis(y_axis_g);\n  //   // Transform y axis group\n  //   y_axis_g.attr('transform', `translate(${Buffer},0)`);\n  // }, [data]);\n  // return <svg ref={svgRef}></svg>;\n};\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","useEffect","useRef","d3","buffer","BarChart","data","_c","$RefreshReg$"],"sources":["/Users/user/Desktop/etl/my-app/src/component/BarChart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { buffer } from 'd3';\n\nconst BarChart = ({ data }) => {\n  // const svgRef = useRef();\n  // console.log(data);\n  // const width = 600;\n  // const height = 500;\n  // useEffect(() => {\n  //   // D3.js code to draw the bar chart\n  //   const svg = d3\n  //     .select(svgRef.current)\n  //     .attr('width', width)\n  //     .attr('height', height);\n  //   const Buffer = 25;\n  //   //color\n  //   const color = d3\n  //     .scaleThreshold()\n  //     .domain([Math.round(d3.mean(data))])\n  //     .range(['#AED6F1', '#2874A6']);\n  //   const y_axis_scale = d3\n  //     .scaleLinear()\n  //     .domain([0, Math.max(...data)])\n  //     .range([buffer, height - buffer]);\n  //   const y_axis = d3\n  //     .axisLeft(y_axis_scale)\n  //     .tickSizeOuter(0)\n  //     .tickSizeInner(3)\n  //     .ticks(12);\n  //   const y_axis_g = svg.append('g').attr('id', 'yAxisG');\n  //   //RENDER Y AXIS\n  //   y_axis(y_axis_g);\n  //   // Transform y axis group\n  //   y_axis_g.attr('transform', `translate(${Buffer},0)`);\n  // }, [data]);\n  // return <svg ref={svgRef}></svg>;\n};\n\nexport default BarChart;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,KAAKC,EAAE,MAAM,IAAI;AACxB,SAASC,MAAM,QAAQ,IAAI;AAE3B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC7B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAAA,CACD;AAACC,EAAA,GAjCIF,QAAQ;AAmCd,eAAeA,QAAQ;AAAC,IAAAE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}