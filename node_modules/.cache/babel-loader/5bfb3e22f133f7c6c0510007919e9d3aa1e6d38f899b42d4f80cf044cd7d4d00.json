{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport './App.scss';\nimport { useFile } from './store/useFile';\nimport Health from './component/Health';\nfunction App() {}\n// const [category, SetCategory] = useState(5);\n// const [data, setData] = useState([]);\n// const [isLoading] = useState(true);\n// const file = useFile();\n// const [categoryData, setCategoryData] = useState([]);\n\n// const anneeOptions = ['Tous les années', '2022', '2023'];\n// const annee = 'Tous les annees';\n// const dataToShow = '/Users/user/Desktop/etl/my-app/data/pointsDeVente-tous';\n\n// const fileOptions = [\n//   {\n//     label: 'Points De Vente',\n//   },\n//   {\n//     label: 'Produit',\n//   },\n// ];\n\n// useEffect(() => {\n//   // handleFile();\n//   // handleCategory();\n// }, []);\n\n// const handleFile = async () => {\n//   try {\n//     const getData = await file.getFileData(dataToShow);\n//     setData(getData);\n//     return getData;\n//   } catch (e) {\n//     console.log(e);\n//   }\n// };\n\n// const handleCategory = () => {\n//   const categoryData = [];\n//   data.forEach((item) => {\n//     if (!categoryData.includes(item.catID)) categoryData.push(item.catID);\n//   });\n//   categoryData.sort((a, b) => a - b);\n//   setCategoryData(categoryData);\n//   return categoryData;\n// };\n\n// return (\n// <>\n//   <h2>Notification du score de santé d’un fabricant sur le marché</h2>\n//   <div className=\"box-select-container\">\n//     <div className=\"box\">\n//       <div className=\"box-select\">\n//         <h2 className=\"title\">Choisir les données</h2>\n//         <select className=\"select\">\n//           {fileOptions.map((item) => (\n//             <option key={item.label} value={item.label}>\n//               {item.label}\n//             </option>\n//           ))}\n//         </select>\n//       </div>\n//       <div className=\"box-select\">\n//         <h2 className=\"title\">Choisir la catégorie</h2>\n//         <select className=\"select\">\n//           {categoryData.map((item, index) => (\n//             <option key={item} value={index + 1}>\n//               {index + 1}\n//             </option>\n//           ))}\n//         </select>\n//       </div>\n//       <div className=\"box-select\">\n//         <h2 className=\"title\">Choisir l'années</h2>\n//         <select className=\"select\">\n//           {anneeOptions.map((item) => (\n//             <option key={item} value={item}>\n//               {item}\n//             </option>\n//           ))}\n//         </select>\n//       </div>\n//     </div>\n//     <div>\n//       <Health mag=\"true\" data={data} annee={annee} catID={category} />\n//     </div>\n//   </div>\n// </>\n// );\n// }\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useFile","Health","App","_c","$RefreshReg$"],"sources":["/Users/user/Desktop/etl/my-app/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport './App.scss';\nimport { useFile } from './store/useFile';\nimport Health from './component/Health';\n\nfunction App() {}\n// const [category, SetCategory] = useState(5);\n// const [data, setData] = useState([]);\n// const [isLoading] = useState(true);\n// const file = useFile();\n// const [categoryData, setCategoryData] = useState([]);\n\n// const anneeOptions = ['Tous les années', '2022', '2023'];\n// const annee = 'Tous les annees';\n// const dataToShow = '/Users/user/Desktop/etl/my-app/data/pointsDeVente-tous';\n\n// const fileOptions = [\n//   {\n//     label: 'Points De Vente',\n//   },\n//   {\n//     label: 'Produit',\n//   },\n// ];\n\n// useEffect(() => {\n//   // handleFile();\n//   // handleCategory();\n// }, []);\n\n// const handleFile = async () => {\n//   try {\n//     const getData = await file.getFileData(dataToShow);\n//     setData(getData);\n//     return getData;\n//   } catch (e) {\n//     console.log(e);\n//   }\n// };\n\n// const handleCategory = () => {\n//   const categoryData = [];\n//   data.forEach((item) => {\n//     if (!categoryData.includes(item.catID)) categoryData.push(item.catID);\n//   });\n//   categoryData.sort((a, b) => a - b);\n//   setCategoryData(categoryData);\n//   return categoryData;\n// };\n\n// return (\n// <>\n//   <h2>Notification du score de santé d’un fabricant sur le marché</h2>\n//   <div className=\"box-select-container\">\n//     <div className=\"box\">\n//       <div className=\"box-select\">\n//         <h2 className=\"title\">Choisir les données</h2>\n//         <select className=\"select\">\n//           {fileOptions.map((item) => (\n//             <option key={item.label} value={item.label}>\n//               {item.label}\n//             </option>\n//           ))}\n//         </select>\n//       </div>\n//       <div className=\"box-select\">\n//         <h2 className=\"title\">Choisir la catégorie</h2>\n//         <select className=\"select\">\n//           {categoryData.map((item, index) => (\n//             <option key={item} value={index + 1}>\n//               {index + 1}\n//             </option>\n//           ))}\n//         </select>\n//       </div>\n//       <div className=\"box-select\">\n//         <h2 className=\"title\">Choisir l'années</h2>\n//         <select className=\"select\">\n//           {anneeOptions.map((item) => (\n//             <option key={item} value={item}>\n//               {item}\n//             </option>\n//           ))}\n//         </select>\n//       </div>\n//     </div>\n//     <div>\n//       <Health mag=\"true\" data={data} annee={annee} catID={category} />\n//     </div>\n//   </div>\n// </>\n// );\n// }\n\nexport default App;\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,YAAY;AACnB,SAASC,OAAO,QAAQ,iBAAiB;AACzC,OAAOC,MAAM,MAAM,oBAAoB;AAEvC,SAASC,GAAGA,CAAA,EAAG,CAAC;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAC,EAAA,GAvFSD,GAAG;AAyFZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}