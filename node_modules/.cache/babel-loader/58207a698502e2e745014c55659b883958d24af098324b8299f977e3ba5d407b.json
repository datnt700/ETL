{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/Projet/etl/my-app/src/component/BarChartMoyenne.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BarChartMoyenne = ({\n  moyenneProdTop1,\n  moyenneProdTop2,\n  chartProd,\n  chartFab\n}) => {\n  _s();\n  console.log(moyenneProdTop1);\n  const svgFabRef = useRef();\n  const svgProdRef = useRef();\n  const width = 600;\n  const height = 500;\n  const margin = {\n    top: 20,\n    right: 30,\n    bottom: 40,\n    left: 40\n  };\n  //   useEffect(() => {\n  //     // D3.js code to draw the bar chart\n  //     const svg = d3.select(svgFabRef.current);\n  //     if (!svg.empty()) {\n  //       svg.attr('width', width).attr('height', height);\n\n  //       // Thiết lập scale cho trục x\n  //       const xScale = d3\n  //         .scaleBand()\n  //         .domain(topMagasinByFab.map((d) => Object.keys(d)[0]))\n  //         .range([margin.left, width - margin.right])\n  //         .padding(0.1);\n\n  //       // Thiết lập scale cho trục y\n  //       const yScale = d3\n  //         .scaleLinear()\n  //         .domain([0, d3.max(topMagasinByFab, (d) => Object.values(d)[0])])\n  //         .nice()\n  //         .range([height - margin.bottom, margin.top]);\n\n  //       svg\n  //         .selectAll('rect')\n  //         .data(topMagasinByFab)\n  //         .enter()\n  //         .append('rect')\n  //         .attr('x', (d) => xScale(Object.keys(d)[0]))\n  //         .attr('y', (d) => yScale(Object.values(d)[0]))\n  //         .attr('width', xScale.bandwidth())\n  //         .attr(\n  //           'height',\n  //           (d) => height - margin.bottom - yScale(Object.values(d)[0])\n  //         )\n  //         .attr('fill', 'steelblue');\n\n  //       // Thêm nhãn giá trị bên trong mỗi thanh\n  //       svg\n  //         .selectAll('text')\n  //         .data(topMagasinByFab)\n  //         .enter()\n  //         .append('text')\n  //         .text((d) => Object.values(d)[0])\n  //         .attr('x', (d, i) => xScale(Object.keys(d)[0]) + xScale.bandwidth() / 2) // Sử dụng chỉ số i để xác định vị trí trên trục x\n  //         .attr('y', (d) => yScale(Object.values(d)[0]) - 5)\n  //         .attr('text-anchor', 'middle')\n  //         .attr('font-size', '14px')\n  //         .attr('fill', 'gray ');\n\n  //       // Dựng trục x\n  //       svg\n  //         .append('g')\n  //         .attr('transform', `translate(0,${height - margin.bottom})`)\n  //         .call(d3.axisBottom(xScale));\n\n  //       // Dựng trục y\n  //       svg\n  //         .append('g')\n  //         .attr('transform', `translate(${margin.left},0)`)\n  //         .call(d3.axisLeft(yScale).ticks(5));\n\n  //       // Đặt tên trục và tiêu đề\n  //       svg\n  //         .append('text')\n  //         .attr('x', width / 2)\n  //         .attr('y', height)\n  //         .text('Key');\n\n  //       svg\n  //         .append('text')\n  //         .attr('x', -height / 2)\n  //         .attr('y', 10)\n  //         .attr('transform', 'rotate(-90)')\n  //         .text('Value');\n  //     }\n  //   }, [topMagasinByFab]);\n  //   useEffect(() => {\n  //     // D3.js code to draw the bar chart\n  //     const svg = d3.select(svgProdRef.current);\n  //     if (!svg.empty()) {\n  //       svg.attr('width', width).attr('height', height);\n\n  //       // Thiết lập scale cho trục x\n  //       const xScale = d3\n  //         .scaleBand()\n  //         .domain(topMagasinByProd.map((d) => Object.keys(d)[0]))\n  //         .range([margin.left, width - margin.right])\n  //         .padding(0.1);\n\n  //       // Thiết lập scale cho trục y\n  //       const yScale = d3\n  //         .scaleLinear()\n  //         .domain([0, d3.max(topMagasinByProd, (d) => Object.values(d)[0])])\n  //         .nice()\n  //         .range([height - margin.bottom, margin.top]);\n\n  //       svg\n  //         .selectAll('rect')\n  //         .data(topMagasinByProd)\n  //         .enter()\n  //         .append('rect')\n  //         .attr('x', (d) => xScale(Object.keys(d)[0]))\n  //         .attr('y', (d) => yScale(Object.values(d)[0]))\n  //         .attr('width', xScale.bandwidth())\n  //         .attr(\n  //           'height',\n  //           (d) => height - margin.bottom - yScale(Object.values(d)[0])\n  //         )\n  //         .attr('fill', 'steelblue');\n\n  //       // Thêm nhãn giá trị bên trong mỗi thanh\n  //       svg\n  //         .selectAll('text')\n  //         .data(topMagasinByProd)\n  //         .enter()\n  //         .append('text')\n  //         .text((d) => Object.values(d)[0])\n  //         .attr('x', (d, i) => xScale(Object.keys(d)[0]) + xScale.bandwidth() / 2) // Sử dụng chỉ số i để xác định vị trí trên trục x\n  //         .attr('y', (d) => yScale(Object.values(d)[0]) - 5)\n  //         .attr('text-anchor', 'middle')\n  //         .attr('font-size', '14px')\n  //         .attr('fill', 'gray ');\n\n  //       // Dựng trục x\n  //       svg\n  //         .append('g')\n  //         .attr('transform', `translate(0,${height - margin.bottom})`)\n  //         .call(d3.axisBottom(xScale));\n\n  //       // Dựng trục y\n  //       svg\n  //         .append('g')\n  //         .attr('transform', `translate(${margin.left},0)`)\n  //         .call(d3.axisLeft(yScale).ticks(5));\n\n  //       // Đặt tên trục và tiêu đề\n  //       svg\n  //         .append('text')\n  //         .attr('x', width / 2)\n  //         .attr('y', height)\n  //         .text('Key');\n\n  //       svg\n  //         .append('text')\n  //         .attr('x', -height / 2)\n  //         .attr('y', 10)\n  //         .attr('transform', 'rotate(-90)')\n  //         .text('Value');\n  //     }\n  //   }, [topMagasinByProd]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Top Magasin a la plus des fabricants avec lesquels coop\\xE9rer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgFabRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Top Magasin a la plus des produits \\xE0 vendre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgProdRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(BarChartMoyenne, \"Z58nWmJlxPLgqd0mMC/8x0IWz6A=\");\n_c = BarChartMoyenne;\nexport default BarChartMoyenne;\nvar _c;\n$RefreshReg$(_c, \"BarChartMoyenne\");","map":{"version":3,"names":["React","useEffect","useRef","d3","Chart","jsxDEV","_jsxDEV","Fragment","_Fragment","BarChartMoyenne","moyenneProdTop1","moyenneProdTop2","chartProd","chartFab","_s","console","log","svgFabRef","svgProdRef","width","height","margin","top","right","bottom","left","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/Users/user/Desktop/Projet/etl/my-app/src/component/BarChartMoyenne.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport Chart from 'chart.js/auto';\n\nconst BarChartMoyenne = ({\n  moyenneProdTop1,\n  moyenneProdTop2,\n  chartProd,\n  chartFab,\n}) => {\n  console.log(moyenneProdTop1);\n  const svgFabRef = useRef();\n  const svgProdRef = useRef();\n\n  const width = 600;\n  const height = 500;\n  const margin = { top: 20, right: 30, bottom: 40, left: 40 };\n  //   useEffect(() => {\n  //     // D3.js code to draw the bar chart\n  //     const svg = d3.select(svgFabRef.current);\n  //     if (!svg.empty()) {\n  //       svg.attr('width', width).attr('height', height);\n\n  //       // Thiết lập scale cho trục x\n  //       const xScale = d3\n  //         .scaleBand()\n  //         .domain(topMagasinByFab.map((d) => Object.keys(d)[0]))\n  //         .range([margin.left, width - margin.right])\n  //         .padding(0.1);\n\n  //       // Thiết lập scale cho trục y\n  //       const yScale = d3\n  //         .scaleLinear()\n  //         .domain([0, d3.max(topMagasinByFab, (d) => Object.values(d)[0])])\n  //         .nice()\n  //         .range([height - margin.bottom, margin.top]);\n\n  //       svg\n  //         .selectAll('rect')\n  //         .data(topMagasinByFab)\n  //         .enter()\n  //         .append('rect')\n  //         .attr('x', (d) => xScale(Object.keys(d)[0]))\n  //         .attr('y', (d) => yScale(Object.values(d)[0]))\n  //         .attr('width', xScale.bandwidth())\n  //         .attr(\n  //           'height',\n  //           (d) => height - margin.bottom - yScale(Object.values(d)[0])\n  //         )\n  //         .attr('fill', 'steelblue');\n\n  //       // Thêm nhãn giá trị bên trong mỗi thanh\n  //       svg\n  //         .selectAll('text')\n  //         .data(topMagasinByFab)\n  //         .enter()\n  //         .append('text')\n  //         .text((d) => Object.values(d)[0])\n  //         .attr('x', (d, i) => xScale(Object.keys(d)[0]) + xScale.bandwidth() / 2) // Sử dụng chỉ số i để xác định vị trí trên trục x\n  //         .attr('y', (d) => yScale(Object.values(d)[0]) - 5)\n  //         .attr('text-anchor', 'middle')\n  //         .attr('font-size', '14px')\n  //         .attr('fill', 'gray ');\n\n  //       // Dựng trục x\n  //       svg\n  //         .append('g')\n  //         .attr('transform', `translate(0,${height - margin.bottom})`)\n  //         .call(d3.axisBottom(xScale));\n\n  //       // Dựng trục y\n  //       svg\n  //         .append('g')\n  //         .attr('transform', `translate(${margin.left},0)`)\n  //         .call(d3.axisLeft(yScale).ticks(5));\n\n  //       // Đặt tên trục và tiêu đề\n  //       svg\n  //         .append('text')\n  //         .attr('x', width / 2)\n  //         .attr('y', height)\n  //         .text('Key');\n\n  //       svg\n  //         .append('text')\n  //         .attr('x', -height / 2)\n  //         .attr('y', 10)\n  //         .attr('transform', 'rotate(-90)')\n  //         .text('Value');\n  //     }\n  //   }, [topMagasinByFab]);\n  //   useEffect(() => {\n  //     // D3.js code to draw the bar chart\n  //     const svg = d3.select(svgProdRef.current);\n  //     if (!svg.empty()) {\n  //       svg.attr('width', width).attr('height', height);\n\n  //       // Thiết lập scale cho trục x\n  //       const xScale = d3\n  //         .scaleBand()\n  //         .domain(topMagasinByProd.map((d) => Object.keys(d)[0]))\n  //         .range([margin.left, width - margin.right])\n  //         .padding(0.1);\n\n  //       // Thiết lập scale cho trục y\n  //       const yScale = d3\n  //         .scaleLinear()\n  //         .domain([0, d3.max(topMagasinByProd, (d) => Object.values(d)[0])])\n  //         .nice()\n  //         .range([height - margin.bottom, margin.top]);\n\n  //       svg\n  //         .selectAll('rect')\n  //         .data(topMagasinByProd)\n  //         .enter()\n  //         .append('rect')\n  //         .attr('x', (d) => xScale(Object.keys(d)[0]))\n  //         .attr('y', (d) => yScale(Object.values(d)[0]))\n  //         .attr('width', xScale.bandwidth())\n  //         .attr(\n  //           'height',\n  //           (d) => height - margin.bottom - yScale(Object.values(d)[0])\n  //         )\n  //         .attr('fill', 'steelblue');\n\n  //       // Thêm nhãn giá trị bên trong mỗi thanh\n  //       svg\n  //         .selectAll('text')\n  //         .data(topMagasinByProd)\n  //         .enter()\n  //         .append('text')\n  //         .text((d) => Object.values(d)[0])\n  //         .attr('x', (d, i) => xScale(Object.keys(d)[0]) + xScale.bandwidth() / 2) // Sử dụng chỉ số i để xác định vị trí trên trục x\n  //         .attr('y', (d) => yScale(Object.values(d)[0]) - 5)\n  //         .attr('text-anchor', 'middle')\n  //         .attr('font-size', '14px')\n  //         .attr('fill', 'gray ');\n\n  //       // Dựng trục x\n  //       svg\n  //         .append('g')\n  //         .attr('transform', `translate(0,${height - margin.bottom})`)\n  //         .call(d3.axisBottom(xScale));\n\n  //       // Dựng trục y\n  //       svg\n  //         .append('g')\n  //         .attr('transform', `translate(${margin.left},0)`)\n  //         .call(d3.axisLeft(yScale).ticks(5));\n\n  //       // Đặt tên trục và tiêu đề\n  //       svg\n  //         .append('text')\n  //         .attr('x', width / 2)\n  //         .attr('y', height)\n  //         .text('Key');\n\n  //       svg\n  //         .append('text')\n  //         .attr('x', -height / 2)\n  //         .attr('y', 10)\n  //         .attr('transform', 'rotate(-90)')\n  //         .text('Value');\n  //     }\n  //   }, [topMagasinByProd]);\n  return (\n    <>\n      <h4>Top Magasin a la plus des fabricants avec lesquels coopérer</h4>\n      <svg ref={svgFabRef}></svg>\n      <h4>Top Magasin a la plus des produits à vendre</h4>\n\n      <svg ref={svgProdRef}></svg>\n    </>\n  );\n};\n\nexport default BarChartMoyenne;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,KAAKC,EAAE,MAAM,IAAI;AACxB,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,eAAe,GAAGA,CAAC;EACvBC,eAAe;EACfC,eAAe;EACfC,SAAS;EACTC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJC,OAAO,CAACC,GAAG,CAACN,eAAe,CAAC;EAC5B,MAAMO,SAAS,GAAGf,MAAM,CAAC,CAAC;EAC1B,MAAMgB,UAAU,GAAGhB,MAAM,CAAC,CAAC;EAE3B,MAAMiB,KAAK,GAAG,GAAG;EACjB,MAAMC,MAAM,GAAG,GAAG;EAClB,MAAMC,MAAM,GAAG;IAAEC,GAAG,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,MAAM,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC;EAC3D;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACEnB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAA2D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpExB,OAAA;MAAKyB,GAAG,EAAEd;IAAU;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC3BxB,OAAA;MAAAoB,QAAA,EAAI;IAA2C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEpDxB,OAAA;MAAKyB,GAAG,EAAEb;IAAW;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA,eAC5B,CAAC;AAEP,CAAC;AAAChB,EAAA,CA1KIL,eAAe;AAAAuB,EAAA,GAAfvB,eAAe;AA4KrB,eAAeA,eAAe;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}