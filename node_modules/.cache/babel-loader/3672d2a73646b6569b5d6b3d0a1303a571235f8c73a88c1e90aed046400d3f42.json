{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/etl/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './App.scss';\nimport { useFile } from './store/useFile';\nimport Health from './component/Health';\nimport Papa from 'papaparse';\nimport dataCSV from './data/pointsDeVente-tous.csv';\nimport FileInput from 'react-file-reader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [category, SetCategory] = useState(5);\n  const [dataFile, setDataFile] = useState([]);\n  const [isLoading] = useState(true);\n  const file = useFile();\n  const [categoryData, setCategoryData] = useState([]);\n  const anneeOptions = ['Tous les années', '2022', '2023'];\n  const annee = 'Tous les annees';\n  const dataToShow = '/Users/user/Desktop/etl/my-app/src/data/pointsDeVente-tous.csv';\n  const fileOptions = [{\n    label: 'Points De Vente'\n  }, {\n    label: 'Produit'\n  }];\n\n  // useEffect(() => {\n  //   handleCategory();\n  // }, [dataFile]);\n  // useEffect(() => {\n  //   // Đường dẫn đến tệp CSV (điều này cần phải được điều chỉnh cho đúng đường dẫn của bạn)\n  //   const csvFilePath =\n  //     '/Users/user/Desktop/etl/my-app/src/data/pointsDeVente-tous.csv';\n\n  //   // Sử dụng PapaParse để đọc tệp CSV\n  //   Papa.parse(csvFilePath, {\n  //     header: true, // Đảm bảo tệp CSV có hàng tiêu đề\n  //     dynamicTyping: true, // Tự động xác định kiểu dữ liệu\n  //     skipEmptyLines: true, // Bỏ qua các dòng trống\n  //     complete: (result) => {\n  //       const data = result.data;\n  //       console.log(data); // Dữ liệu từ tệp CSV\n  //     },\n  //   });\n  // }, []);\n\n  // const handleFile = async () => {\n  //   try {\n  //     const getData = await file.getFileData();\n  //     setData(getData);\n\n  //     return getData;\n  //   } catch (e) {\n  //     console.log(e);\n  //   }\n  // };\n  // const handleCSVFile = (file) => {\n  //   Papa.parse(file, {\n  //     dynamicTyping: true, // Tự động xác định kiểu dữ liệu\n  //     skipEmptyLines: true, // Bỏ qua các dòng trống\n  //     complete: (result) => {\n  //       const fileData = [];\n  //       const dataFile = result.data;\n  //       dataFile.forEach((line) => {\n  //         const subArrayString = line[0];\n  //         const [dateID, prodID, catID, fabID, magID] =\n  //           subArrayString.split(' ');\n  //         const item = {\n  //           dateID,\n  //           prodID,\n  //           catID,\n  //           fabID,\n  //           magID,\n  //         };\n  //         fileData.push(item);\n  //       });\n  //       setDataFile(fileData);\n  //     },\n  //   });\n  // };\n\n  useEffect(() => {\n    // Đường dẫn đến tệp CSV\n    const csvFilePath = '/Users/user/Desktop/etl/my-app/src/data/produits-tous.json';\n\n    // Sử dụng Papa Parse để đọc tệp CSV\n    Papa.parse(csvFilePath, {\n      header: true,\n      // Sử dụng hàng đầu tiên làm header\n      dynamicTyping: true,\n      // Tự động xác định kiểu dữ liệu\n      complete: result => {\n        // Khi việc đọc kết thúc, hiển thị dữ liệu trong console\n        console.log(result.data);\n      }\n    });\n  }, []);\n\n  // const handleCategory = () => {\n  //   const categoryData = [];\n  //   dataFile.forEach((item) => {\n  //     if (!categoryData.includes(item.catID)) categoryData.push(item.catID);\n  //   });\n  //   categoryData.sort((a, b) => a - b);\n  //   setCategoryData(categoryData);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Notification du score de sant\\xE9 d\\u2019un fabricant sur le march\\xE9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box-select-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"title\",\n            children: \"Choisir les donn\\xE9es\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"select\",\n            children: fileOptions.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: item.label,\n              children: item.label\n            }, item.label, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"title\",\n            children: \"Choisir la cat\\xE9gorie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"select\",\n            children: categoryData.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: index + 1,\n              children: index + 1\n            }, item, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"title\",\n            children: \"Choisir l'ann\\xE9es\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"select\",\n            children: anneeOptions.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: item,\n              children: item\n            }, item, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"7MPMTTtR/17gSluWBvdpZHyuhL4=\", false, function () {\n  return [useFile];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useFile","Health","Papa","dataCSV","FileInput","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","category","SetCategory","dataFile","setDataFile","isLoading","file","categoryData","setCategoryData","anneeOptions","annee","dataToShow","fileOptions","label","csvFilePath","parse","header","dynamicTyping","complete","result","console","log","data","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","item","value","index","_c","$RefreshReg$"],"sources":["/Users/user/Desktop/etl/my-app/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport './App.scss';\nimport { useFile } from './store/useFile';\nimport Health from './component/Health';\nimport Papa from 'papaparse';\nimport dataCSV from './data/pointsDeVente-tous.csv';\nimport FileInput from 'react-file-reader';\n\nfunction App() {\n  const [category, SetCategory] = useState(5);\n  const [dataFile, setDataFile] = useState([]);\n  const [isLoading] = useState(true);\n  const file = useFile();\n  const [categoryData, setCategoryData] = useState([]);\n\n  const anneeOptions = ['Tous les années', '2022', '2023'];\n  const annee = 'Tous les annees';\n  const dataToShow =\n    '/Users/user/Desktop/etl/my-app/src/data/pointsDeVente-tous.csv';\n\n  const fileOptions = [\n    {\n      label: 'Points De Vente',\n    },\n    {\n      label: 'Produit',\n    },\n  ];\n\n  // useEffect(() => {\n  //   handleCategory();\n  // }, [dataFile]);\n  // useEffect(() => {\n  //   // Đường dẫn đến tệp CSV (điều này cần phải được điều chỉnh cho đúng đường dẫn của bạn)\n  //   const csvFilePath =\n  //     '/Users/user/Desktop/etl/my-app/src/data/pointsDeVente-tous.csv';\n\n  //   // Sử dụng PapaParse để đọc tệp CSV\n  //   Papa.parse(csvFilePath, {\n  //     header: true, // Đảm bảo tệp CSV có hàng tiêu đề\n  //     dynamicTyping: true, // Tự động xác định kiểu dữ liệu\n  //     skipEmptyLines: true, // Bỏ qua các dòng trống\n  //     complete: (result) => {\n  //       const data = result.data;\n  //       console.log(data); // Dữ liệu từ tệp CSV\n  //     },\n  //   });\n  // }, []);\n\n  // const handleFile = async () => {\n  //   try {\n  //     const getData = await file.getFileData();\n  //     setData(getData);\n\n  //     return getData;\n  //   } catch (e) {\n  //     console.log(e);\n  //   }\n  // };\n  // const handleCSVFile = (file) => {\n  //   Papa.parse(file, {\n  //     dynamicTyping: true, // Tự động xác định kiểu dữ liệu\n  //     skipEmptyLines: true, // Bỏ qua các dòng trống\n  //     complete: (result) => {\n  //       const fileData = [];\n  //       const dataFile = result.data;\n  //       dataFile.forEach((line) => {\n  //         const subArrayString = line[0];\n  //         const [dateID, prodID, catID, fabID, magID] =\n  //           subArrayString.split(' ');\n  //         const item = {\n  //           dateID,\n  //           prodID,\n  //           catID,\n  //           fabID,\n  //           magID,\n  //         };\n  //         fileData.push(item);\n  //       });\n  //       setDataFile(fileData);\n  //     },\n  //   });\n  // };\n\n  useEffect(() => {\n    // Đường dẫn đến tệp CSV\n    const csvFilePath =\n      '/Users/user/Desktop/etl/my-app/src/data/produits-tous.json';\n\n    // Sử dụng Papa Parse để đọc tệp CSV\n    Papa.parse(csvFilePath, {\n      header: true, // Sử dụng hàng đầu tiên làm header\n      dynamicTyping: true, // Tự động xác định kiểu dữ liệu\n      complete: (result) => {\n        // Khi việc đọc kết thúc, hiển thị dữ liệu trong console\n        console.log(result.data);\n      },\n    });\n  }, []);\n\n  // const handleCategory = () => {\n  //   const categoryData = [];\n  //   dataFile.forEach((item) => {\n  //     if (!categoryData.includes(item.catID)) categoryData.push(item.catID);\n  //   });\n  //   categoryData.sort((a, b) => a - b);\n  //   setCategoryData(categoryData);\n  // };\n\n  return (\n    <>\n      <h2>Notification du score de santé d’un fabricant sur le marché</h2>\n      {/* <div>\n        <input\n          type=\"file\"\n          accept=\".csv\"\n          onChange={(e) => handleCSVFile(e.target.files[0])}\n        />\n      </div> */}\n      <div className=\"box-select-container\">\n        <div className=\"box\">\n          <div className=\"box-select\">\n            <h2 className=\"title\">Choisir les données</h2>\n            <select className=\"select\">\n              {fileOptions.map((item) => (\n                <option key={item.label} value={item.label}>\n                  {item.label}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"box-select\">\n            <h2 className=\"title\">Choisir la catégorie</h2>\n            <select className=\"select\">\n              {categoryData.map((item, index) => (\n                <option key={item} value={index + 1}>\n                  {index + 1}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"box-select\">\n            <h2 className=\"title\">Choisir l'années</h2>\n            <select className=\"select\">\n              {anneeOptions.map((item) => (\n                <option key={item} value={item}>\n                  {item}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n        <div>\n          {/* <Health mag=\"true\" data={data} annee={annee} catID={category} /> */}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}