{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/Projet/etl/my-app/src/component/BarChartMoyenne.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BarChartMoyenne = ({\n  moyenneProdTop1,\n  moyenneProdTop2,\n  chartProd,\n  chartFab\n}) => {\n  _s();\n  const dateString = ['Janvier 2022', 'Février 2022', 'Mars 2022', 'Avril 2022', 'Mai 2022', 'Juin 2022', 'Juillet 2022', 'Août 2022', 'Septembre 2022', 'Octobre 2022', 'Novembre 2022', 'Decembre 2022', 'Janvier 2023'];\n  const svgProdRef = useRef();\n  const margin = {\n    top: 20,\n    right: 30,\n    bottom: 40,\n    left: 40\n  };\n  const width = 800;\n  const height = 500;\n  const svgFabRef = useRef(null);\n  useEffect(() => {\n    // Kích thước biểu đồ\n    const width = 600;\n    const height = 400;\n    const margin = {\n      top: 20,\n      right: 30,\n      bottom: 40,\n      left: 40\n    };\n\n    // Tạo biểu đồ\n    const svg = d3.select(svgFabRef.current).attr('width', width).attr('height', height);\n\n    // Scale cho trục x và trục y\n    const xScale = d3.scaleBand().domain(dateString).range([margin.left, width - margin.right]).padding(0.2);\n    const yScale = d3.scaleLinear().domain([0, d3.max(chartFab)]).nice().range([height - margin.bottom, margin.top]);\n\n    // Vẽ các thanh bar\n    svg.selectAll('rect').data(chartFab).enter().append('rect').attr('x', (d, i) => xScale(dateString[i])).attr('y', d => yScale(d)).attr('width', xScale.bandwidth()).attr('height', d => height - margin.bottom - yScale(d)).attr('fill', 'steelblue');\n\n    // Hiển thị giá trị trên mỗi thanh bar\n    svg.selectAll('text').data(chartFab).enter().append('text').attr('x', (d, i) => xScale(dateString[i]) + xScale.bandwidth() / 2).attr('y', d => yScale(d) - 5) // Điều chỉnh vị trí của giá trị\n    .attr('text-anchor', 'middle').attr('font-size', '12px').attr('fill', 'white').text(d => d);\n\n    // Vẽ trục x và trục y\n    svg.append('g').attr('transform', `translate(0,${height - margin.bottom})`).call(d3.axisBottom(xScale));\n    svg.append('g').attr('transform', `translate(${margin.left},0)`).call(d3.axisLeft(yScale));\n  }, [chartFab, dateString]);\n  //   useEffect(() => {\n  //     // D3.js code to draw the bar chart\n  //     const svg = d3.select(svgProdRef.current);\n  //     if (!svg.empty()) {\n  //       svg.attr('width', width).attr('height', height);\n\n  //       // Thiết lập scale cho trục x\n  //       const xScale = d3\n  //         .scaleBand()\n  //         .domain(topMagasinByProd.map((d) => Object.keys(d)[0]))\n  //         .range([margin.left, width - margin.right])\n  //         .padding(0.1);\n\n  //       // Thiết lập scale cho trục y\n  //       const yScale = d3\n  //         .scaleLinear()\n  //         .domain([0, d3.max(topMagasinByProd, (d) => Object.values(d)[0])])\n  //         .nice()\n  //         .range([height - margin.bottom, margin.top]);\n\n  //       svg\n  //         .selectAll('rect')\n  //         .data(topMagasinByProd)\n  //         .enter()\n  //         .append('rect')\n  //         .attr('x', (d) => xScale(Object.keys(d)[0]))\n  //         .attr('y', (d) => yScale(Object.values(d)[0]))\n  //         .attr('width', xScale.bandwidth())\n  //         .attr(\n  //           'height',\n  //           (d) => height - margin.bottom - yScale(Object.values(d)[0])\n  //         )\n  //         .attr('fill', 'steelblue');\n\n  //       // Thêm nhãn giá trị bên trong mỗi thanh\n  //       svg\n  //         .selectAll('text')\n  //         .data(topMagasinByProd)\n  //         .enter()\n  //         .append('text')\n  //         .text((d) => Object.values(d)[0])\n  //         .attr('x', (d, i) => xScale(Object.keys(d)[0]) + xScale.bandwidth() / 2) // Sử dụng chỉ số i để xác định vị trí trên trục x\n  //         .attr('y', (d) => yScale(Object.values(d)[0]) - 5)\n  //         .attr('text-anchor', 'middle')\n  //         .attr('font-size', '14px')\n  //         .attr('fill', 'gray ');\n\n  //       // Dựng trục x\n  //       svg\n  //         .append('g')\n  //         .attr('transform', `translate(0,${height - margin.bottom})`)\n  //         .call(d3.axisBottom(xScale));\n\n  //       // Dựng trục y\n  //       svg\n  //         .append('g')\n  //         .attr('transform', `translate(${margin.left},0)`)\n  //         .call(d3.axisLeft(yScale).ticks(5));\n\n  //       // Đặt tên trục và tiêu đề\n  //       svg\n  //         .append('text')\n  //         .attr('x', width / 2)\n  //         .attr('y', height)\n  //         .text('Key');\n\n  //       svg\n  //         .append('text')\n  //         .attr('x', -height / 2)\n  //         .attr('y', 10)\n  //         .attr('transform', 'rotate(-90)')\n  //         .text('Value');\n  //     }\n  //   }, [topMagasinByProd]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Top Magasin a la plus des fabricants avec lesquels coop\\xE9rer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgFabRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(BarChartMoyenne, \"s0cef9sseQlTeWHJ1jfyf/0mXHQ=\");\n_c = BarChartMoyenne;\nexport default BarChartMoyenne;\nvar _c;\n$RefreshReg$(_c, \"BarChartMoyenne\");","map":{"version":3,"names":["React","useEffect","useRef","d3","Chart","jsxDEV","_jsxDEV","Fragment","_Fragment","BarChartMoyenne","moyenneProdTop1","moyenneProdTop2","chartProd","chartFab","_s","dateString","svgProdRef","margin","top","right","bottom","left","width","height","svgFabRef","svg","select","current","attr","xScale","scaleBand","domain","range","padding","yScale","scaleLinear","max","nice","selectAll","data","enter","append","d","i","bandwidth","text","call","axisBottom","axisLeft","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/Users/user/Desktop/Projet/etl/my-app/src/component/BarChartMoyenne.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport Chart from 'chart.js/auto';\n\nconst BarChartMoyenne = ({\n  moyenneProdTop1,\n  moyenneProdTop2,\n  chartProd,\n  chartFab,\n}) => {\n  const dateString = [\n    'Janvier 2022',\n    'Février 2022',\n    'Mars 2022',\n    'Avril 2022',\n    'Mai 2022',\n    'Juin 2022',\n    'Juillet 2022',\n    'Août 2022',\n    'Septembre 2022',\n    'Octobre 2022',\n    'Novembre 2022',\n    'Decembre 2022',\n    'Janvier 2023',\n  ];\n  const svgProdRef = useRef();\n\n  const margin = { top: 20, right: 30, bottom: 40, left: 40 };\n\n  const width = 800;\n  const height = 500;\n  const svgFabRef = useRef(null);\n  useEffect(() => {\n    // Kích thước biểu đồ\n    const width = 600;\n    const height = 400;\n    const margin = { top: 20, right: 30, bottom: 40, left: 40 };\n\n    // Tạo biểu đồ\n    const svg = d3\n      .select(svgFabRef.current)\n      .attr('width', width)\n      .attr('height', height);\n\n    // Scale cho trục x và trục y\n    const xScale = d3\n      .scaleBand()\n      .domain(dateString)\n      .range([margin.left, width - margin.right])\n      .padding(0.2);\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([0, d3.max(chartFab)])\n      .nice()\n      .range([height - margin.bottom, margin.top]);\n\n    // Vẽ các thanh bar\n    svg\n      .selectAll('rect')\n      .data(chartFab)\n      .enter()\n      .append('rect')\n      .attr('x', (d, i) => xScale(dateString[i]))\n      .attr('y', (d) => yScale(d))\n      .attr('width', xScale.bandwidth())\n      .attr('height', (d) => height - margin.bottom - yScale(d))\n      .attr('fill', 'steelblue');\n\n    // Hiển thị giá trị trên mỗi thanh bar\n    svg\n      .selectAll('text')\n      .data(chartFab)\n      .enter()\n      .append('text')\n      .attr('x', (d, i) => xScale(dateString[i]) + xScale.bandwidth() / 2)\n      .attr('y', (d) => yScale(d) - 5) // Điều chỉnh vị trí của giá trị\n      .attr('text-anchor', 'middle')\n      .attr('font-size', '12px')\n      .attr('fill', 'white')\n      .text((d) => d);\n\n    // Vẽ trục x và trục y\n    svg\n      .append('g')\n      .attr('transform', `translate(0,${height - margin.bottom})`)\n      .call(d3.axisBottom(xScale));\n\n    svg\n      .append('g')\n      .attr('transform', `translate(${margin.left},0)`)\n      .call(d3.axisLeft(yScale));\n  }, [chartFab, dateString]);\n  //   useEffect(() => {\n  //     // D3.js code to draw the bar chart\n  //     const svg = d3.select(svgProdRef.current);\n  //     if (!svg.empty()) {\n  //       svg.attr('width', width).attr('height', height);\n\n  //       // Thiết lập scale cho trục x\n  //       const xScale = d3\n  //         .scaleBand()\n  //         .domain(topMagasinByProd.map((d) => Object.keys(d)[0]))\n  //         .range([margin.left, width - margin.right])\n  //         .padding(0.1);\n\n  //       // Thiết lập scale cho trục y\n  //       const yScale = d3\n  //         .scaleLinear()\n  //         .domain([0, d3.max(topMagasinByProd, (d) => Object.values(d)[0])])\n  //         .nice()\n  //         .range([height - margin.bottom, margin.top]);\n\n  //       svg\n  //         .selectAll('rect')\n  //         .data(topMagasinByProd)\n  //         .enter()\n  //         .append('rect')\n  //         .attr('x', (d) => xScale(Object.keys(d)[0]))\n  //         .attr('y', (d) => yScale(Object.values(d)[0]))\n  //         .attr('width', xScale.bandwidth())\n  //         .attr(\n  //           'height',\n  //           (d) => height - margin.bottom - yScale(Object.values(d)[0])\n  //         )\n  //         .attr('fill', 'steelblue');\n\n  //       // Thêm nhãn giá trị bên trong mỗi thanh\n  //       svg\n  //         .selectAll('text')\n  //         .data(topMagasinByProd)\n  //         .enter()\n  //         .append('text')\n  //         .text((d) => Object.values(d)[0])\n  //         .attr('x', (d, i) => xScale(Object.keys(d)[0]) + xScale.bandwidth() / 2) // Sử dụng chỉ số i để xác định vị trí trên trục x\n  //         .attr('y', (d) => yScale(Object.values(d)[0]) - 5)\n  //         .attr('text-anchor', 'middle')\n  //         .attr('font-size', '14px')\n  //         .attr('fill', 'gray ');\n\n  //       // Dựng trục x\n  //       svg\n  //         .append('g')\n  //         .attr('transform', `translate(0,${height - margin.bottom})`)\n  //         .call(d3.axisBottom(xScale));\n\n  //       // Dựng trục y\n  //       svg\n  //         .append('g')\n  //         .attr('transform', `translate(${margin.left},0)`)\n  //         .call(d3.axisLeft(yScale).ticks(5));\n\n  //       // Đặt tên trục và tiêu đề\n  //       svg\n  //         .append('text')\n  //         .attr('x', width / 2)\n  //         .attr('y', height)\n  //         .text('Key');\n\n  //       svg\n  //         .append('text')\n  //         .attr('x', -height / 2)\n  //         .attr('y', 10)\n  //         .attr('transform', 'rotate(-90)')\n  //         .text('Value');\n  //     }\n  //   }, [topMagasinByProd]);\n  return (\n    <>\n      <h4>Top Magasin a la plus des fabricants avec lesquels coopérer</h4>\n      <svg ref={svgFabRef}></svg>\n      {/* <h4>Top Magasin a la plus des produits à vendre</h4>\n\n      <svg ref={svgProdRef}></svg> */}\n    </>\n  );\n};\n\nexport default BarChartMoyenne;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}