{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/Projet/etl/my-app/src/component/BarChartDate.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function BarChartDate({\n  nbFab3Mois\n}) {\n  _s();\n  const svgRef = useRef();\n  const width = 600;\n  const height = 500;\n  const margin = {\n    top: 20,\n    right: 30,\n    bottom: 40,\n    left: 40\n  };\n  useEffect(() => {\n    if (nbFab3Mois) {\n      console.log(nbFab3Mois);\n      // D3.js code to draw the bar chart\n      const svg = d3.select(svgRef.current);\n      if (!svg.empty()) {\n        svg.attr('width', width).attr('height', height);\n\n        // Thiết lập scale cho trục x\n        const xScale = d3.scaleBand().domain(data.map((d, i) => i)) // Sử dụng chỉ số i làm domain\n        .range([0, width]).padding(0.1);\n\n        // Thiết lập scale cho trục y\n        const yScale = d3.scaleLinear().domain([0, d3.max(data)]).nice().range([height, 0]);\n\n        // Vẽ các thanh bar\n        svg.selectAll('rect').data(data).enter().append('rect').attr('x', (d, i) => xScale(i)).attr('y', d => yScale(d)).attr('width', xScale.bandwidth()).attr('height', d => height - yScale(d)).attr('fill', 'steelblue');\n\n        // Hiển thị giá trị trên mỗi thanh bar\n        svg.selectAll('text').data(data).enter().append('text').text(d => d).attr('x', (d, i) => xScale(i) + xScale.bandwidth() / 2).attr('y', d => yScale(d) - 5).attr('text-anchor', 'middle').attr('font-size', '14px').attr('fill', 'gray');\n      }\n    } else {\n      console.log('nbFab3Mois is null or undefined');\n    }\n  }, [nbFab3Mois]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"BarChartDate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(BarChartDate, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = BarChartDate;\nvar _c;\n$RefreshReg$(_c, \"BarChartDate\");","map":{"version":3,"names":["React","useEffect","useRef","d3","jsxDEV","_jsxDEV","Fragment","_Fragment","BarChartDate","nbFab3Mois","_s","svgRef","width","height","margin","top","right","bottom","left","console","log","svg","select","current","empty","attr","xScale","scaleBand","domain","data","map","d","i","range","padding","yScale","scaleLinear","max","nice","selectAll","enter","append","bandwidth","text","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/Users/user/Desktop/Projet/etl/my-app/src/component/BarChartDate.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\n\nexport default function BarChartDate({ nbFab3Mois }) {\n  const svgRef = useRef();\n  const width = 600;\n  const height = 500;\n  const margin = { top: 20, right: 30, bottom: 40, left: 40 };\n  useEffect(() => {\n    if (nbFab3Mois) {\n      console.log(nbFab3Mois);\n      // D3.js code to draw the bar chart\n      const svg = d3.select(svgRef.current);\n      if (!svg.empty()) {\n        svg.attr('width', width).attr('height', height);\n\n        // Thiết lập scale cho trục x\n        const xScale = d3\n          .scaleBand()\n          .domain(data.map((d, i) => i)) // Sử dụng chỉ số i làm domain\n          .range([0, width])\n          .padding(0.1);\n\n        // Thiết lập scale cho trục y\n        const yScale = d3\n          .scaleLinear()\n          .domain([0, d3.max(data)])\n          .nice()\n          .range([height, 0]);\n\n        // Vẽ các thanh bar\n        svg\n          .selectAll('rect')\n          .data(data)\n          .enter()\n          .append('rect')\n          .attr('x', (d, i) => xScale(i))\n          .attr('y', (d) => yScale(d))\n          .attr('width', xScale.bandwidth())\n          .attr('height', (d) => height - yScale(d))\n          .attr('fill', 'steelblue');\n\n        // Hiển thị giá trị trên mỗi thanh bar\n        svg\n          .selectAll('text')\n          .data(data)\n          .enter()\n          .append('text')\n          .text((d) => d)\n          .attr('x', (d, i) => xScale(i) + xScale.bandwidth() / 2)\n          .attr('y', (d) => yScale(d) - 5)\n          .attr('text-anchor', 'middle')\n          .attr('font-size', '14px')\n          .attr('fill', 'gray');\n      }\n    } else {\n      console.log('nbFab3Mois is null or undefined');\n    }\n  }, [nbFab3Mois]);\n\n  return (\n    <>\n      <div>BarChartDate</div>\n      <svg ref={svgRef}></svg>\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,KAAKC,EAAE,MAAM,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzB,eAAe,SAASC,YAAYA,CAAC;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EACnD,MAAMC,MAAM,GAAGT,MAAM,CAAC,CAAC;EACvB,MAAMU,KAAK,GAAG,GAAG;EACjB,MAAMC,MAAM,GAAG,GAAG;EAClB,MAAMC,MAAM,GAAG;IAAEC,GAAG,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,MAAM,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC;EAC3DjB,SAAS,CAAC,MAAM;IACd,IAAIQ,UAAU,EAAE;MACdU,OAAO,CAACC,GAAG,CAACX,UAAU,CAAC;MACvB;MACA,MAAMY,GAAG,GAAGlB,EAAE,CAACmB,MAAM,CAACX,MAAM,CAACY,OAAO,CAAC;MACrC,IAAI,CAACF,GAAG,CAACG,KAAK,CAAC,CAAC,EAAE;QAChBH,GAAG,CAACI,IAAI,CAAC,OAAO,EAAEb,KAAK,CAAC,CAACa,IAAI,CAAC,QAAQ,EAAEZ,MAAM,CAAC;;QAE/C;QACA,MAAMa,MAAM,GAAGvB,EAAE,CACdwB,SAAS,CAAC,CAAC,CACXC,MAAM,CAACC,IAAI,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC,CAAC,CAAC;QAAA,CAC9BC,KAAK,CAAC,CAAC,CAAC,EAAErB,KAAK,CAAC,CAAC,CACjBsB,OAAO,CAAC,GAAG,CAAC;;QAEf;QACA,MAAMC,MAAM,GAAGhC,EAAE,CACdiC,WAAW,CAAC,CAAC,CACbR,MAAM,CAAC,CAAC,CAAC,EAAEzB,EAAE,CAACkC,GAAG,CAACR,IAAI,CAAC,CAAC,CAAC,CACzBS,IAAI,CAAC,CAAC,CACNL,KAAK,CAAC,CAACpB,MAAM,EAAE,CAAC,CAAC,CAAC;;QAErB;QACAQ,GAAG,CACAkB,SAAS,CAAC,MAAM,CAAC,CACjBV,IAAI,CAACA,IAAI,CAAC,CACVW,KAAK,CAAC,CAAC,CACPC,MAAM,CAAC,MAAM,CAAC,CACdhB,IAAI,CAAC,GAAG,EAAE,CAACM,CAAC,EAAEC,CAAC,KAAKN,MAAM,CAACM,CAAC,CAAC,CAAC,CAC9BP,IAAI,CAAC,GAAG,EAAGM,CAAC,IAAKI,MAAM,CAACJ,CAAC,CAAC,CAAC,CAC3BN,IAAI,CAAC,OAAO,EAAEC,MAAM,CAACgB,SAAS,CAAC,CAAC,CAAC,CACjCjB,IAAI,CAAC,QAAQ,EAAGM,CAAC,IAAKlB,MAAM,GAAGsB,MAAM,CAACJ,CAAC,CAAC,CAAC,CACzCN,IAAI,CAAC,MAAM,EAAE,WAAW,CAAC;;QAE5B;QACAJ,GAAG,CACAkB,SAAS,CAAC,MAAM,CAAC,CACjBV,IAAI,CAACA,IAAI,CAAC,CACVW,KAAK,CAAC,CAAC,CACPC,MAAM,CAAC,MAAM,CAAC,CACdE,IAAI,CAAEZ,CAAC,IAAKA,CAAC,CAAC,CACdN,IAAI,CAAC,GAAG,EAAE,CAACM,CAAC,EAAEC,CAAC,KAAKN,MAAM,CAACM,CAAC,CAAC,GAAGN,MAAM,CAACgB,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CACvDjB,IAAI,CAAC,GAAG,EAAGM,CAAC,IAAKI,MAAM,CAACJ,CAAC,CAAC,GAAG,CAAC,CAAC,CAC/BN,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAC7BA,IAAI,CAAC,WAAW,EAAE,MAAM,CAAC,CACzBA,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC;MACzB;IACF,CAAC,MAAM;MACLN,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;IAChD;EACF,CAAC,EAAE,CAACX,UAAU,CAAC,CAAC;EAEhB,oBACEJ,OAAA,CAAAE,SAAA;IAAAqC,QAAA,gBACEvC,OAAA;MAAAuC,QAAA,EAAK;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvB3C,OAAA;MAAK4C,GAAG,EAAEtC;IAAO;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA,eACxB,CAAC;AAEP;AAACtC,EAAA,CA/DuBF,YAAY;AAAA0C,EAAA,GAAZ1C,YAAY;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}